Algorithm is a set of instructions, or the way, of how to solve problems. I learned that there's a notation called O(n) that describes the relationship between the input size and the amount of steps a algorithm might takes to solve the problem. It's suprising to me that there're so many sorting algorithms. Selection sorting looks the most intuitive to me, that's what I would do if I'm asked to sort an array of numbers. It turns out to not be so efficient, and Merge sort, which requires extra steps such as spliting the arrays into pairs, is better. Creating new algorithm surely requires lots of thinking outside the box. 
The video also gives me an insight that one of the first steps of data structure is to conceptualize and making abstraction of information. There are different types of data (string, array, linked list, tree, graph...). But behind the scene, they are just a bunch of memory blocks with  values. What makes each data type unique is how each memory block relates to each other. String and array require their values to be next to each other. Object-oriented data type such as linked list has more freedom, memory locations don't have to be together, but they're still linked by using pointers.