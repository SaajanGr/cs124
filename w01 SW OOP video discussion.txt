one practice that help effective programming is organizing related code (functions and variables) into hierarchial classes and objects, aka Object-oriented programming system. OOPS helps dividing a large project into multiple smaller projects, make the code more reusable and easy to maintain. For example, when creating a game or a simulation, it'd be helpful to classify Character, Weapon, Creeps...  Each class would have its own unique functions (Character can move(), jump(), carry(Weapon)....). One team can work on coding the Character, while another team can code Weapon.
Another practice is using Integrated Development Environment (IDE), which provides a suitable set of tools for software development. IDE includes tools such as code editor (with syntax highliting, code completion..), debugger, compiler.
Another practice is Application Programming Interface, API, which is a set of rules and protocols that allows different software applications to interact/communicate with each other. I learned a little bit about API when I wrote scripts to retrieve data from web servers for my personal projects. I didn't know that large softwares which require multiple teams and programs also require API, so developers can call other teams' programs safely and effectively.
I understand the importance of Documentation. For so many times, I have no idea what I wrote when I look back at my code after a long time. Documentation help save other people's time, and it'll save our own time. I'm still trying to implement this practice. Version control is another practice that I need to pay attention to. I always git push to the main branch.